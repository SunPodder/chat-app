version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rchat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # # Backend API Server
  # backend:
  #   build:
  #     context: .
  #     dockerfile: server/Dockerfile
  #   restart: always
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgresql://postgres:password@localhost:5432/rchat
  #     - FRONTEND_URL=http://localhost:3000
  #   volumes:
  #     - ./server/public/uploads:/app/server/public/uploads
  #     - ./common:/app/common:ro
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Frontend Web Application
  frontend:
    build:
      context: .
      dockerfile: web/Dockerfile
      args:
        VITE_BACKEND_URL: http://localhost:5000
    restart: always
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
